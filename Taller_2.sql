ABI104-2 – ADMINISTRACION DE BASE DE DATOS AVANAZADA – Taller 2 – Jonathan David Agudelo Yepes – Carnet 15119001

--3. Create a view to display the information of the bill (patient, patient_name, patient_address, date, total, total_room_board) ? ?which ? ?has ? ?the ? ?highest ? ?balance ? ?due ? ?for ? ?the ? ?'Room ? ?& ? ?board' ? ?cost ? ?center.
CREATE OR REPLACE VIEW FACTURA_CENTRO_COSTO AS
SELECT  FACTURA.NUM_FACTURA, 
        P.NOMBRES||' '||P.APELLIDO1||' '||NVL(P.APELLIDO2,'') NOMBRE_PACIENTE,
        P.DIRECCION,
        F.FEC_FACTURA,
        F.VLR_TOTAL_FAC,
        FACTURA.VALOR_MAYOR
FROM
(
  SELECT VALORES.NUM_FACTURA, MAX(VALORES.VALOR) VALOR_MAYOR
  FROM 
  (
      SELECT FD.NUM_FACTURA, CC.NOM_CENTRO_COSTOS, Sum(FD.VLR_SERVICIO) VALOR
      FROM FACTURAS_DETALLE FD, SERVICIOS S, CENTROS_COSTOS CC
      WHERE FD.IDE_SERVICIO=S.IDE_SERVICIO
      AND S.IDE_CENTRO_COSTOS=CC.IDE_CENTRO_COSTOS
      AND CC.IDE_CENTRO_COSTOS=100
      GROUP BY FD.NUM_FACTURA, CC.NOM_CENTRO_COSTOS
  ) VALORES
  GROUP BY VALORES.NUM_FACTURA
)FACTURA, PACIENTES P, FACTURAS F
WHERE FACTURA.NUM_FACTURA=F.NUM_FACTURA
AND F.IDE_PACIENTE=P.IDE_PACIENTE
;

-- 4. Create two functions, the first one which receives 2 params: (cost_center_id, bill_id) and return the total balance for all items which belongs to the cost center and associated to a bill. The second one also receives 2 params (cost_center_id, bill_id) and return the total of number of items associated to a bill ? ?which ? ?belongs ? ?to ? ?the ? ?cost ? ?center
/* Crea dos funciones, la primera que recibe 2 params: (cost_center_id, bill_id) y devuelve el 
saldo total para todos los artículos que pertenecen al centro de costos y asociados a una factura. El segundo
también recibe 2 params (cost_center_id, bill_id) y devuelve el total de la cantidad de elementos asociados a un
factura que pertenece al centro de costo*/
CREATE OR REPLACE FUNCTION FUNCION1 (V_CENTRO_COSTO IN NUMBER, V_NUM_FACT IN NUMBER) RETURN NUMBER
IS
  V_VALOR NUMBER;
  V_VALID NUMBER;
BEGIN
  SELECT COUNT(1) INTO V_VALID FROM CENTROS_COSTOS WHERE IDE_CENTRO_COSTOS=V_CENTRO_COSTO;
  IF (V_VALID = 1)
  THEN
    SELECT COUNT(1) INTO V_VALID FROM FACTURAS WHERE NUM_FACTURA=V_NUM_FACT;
      IF (V_VALID = 1)
      THEN
        SELECT SUM(FD.VLR_SERVICIO) INTO V_VALOR
        FROM FACTURAS_DETALLE FD
        INNER JOIN SERVICIOS SE ON SE.IDE_SERVICIO=FD.IDE_SERVICIO
        WHERE FD.NUM_FACTURA=V_NUM_FACT
        AND SE.IDE_CENTRO_COSTOS=V_CENTRO_COSTO
        ;
        RETURN V_VALOR;
      ELSE
        RETURN 0;
      END IF;
  ELSE
      RETURN 0;
  END IF;
EXCEPTION 
WHEN NO_DATA_FOUND THEN
  RETURN 0;
END FUNCION1;
/
 
SELECT FUNCION1(100,29) FROM DUAL;

CREATE OR REPLACE FUNCTION FUNCION2 (V_CENTRO_COSTO IN NUMBER, V_NUM_FACT IN NUMBER) RETURN NUMBER
IS
  V_CANTIDAD NUMBER;
  V_VALID NUMBER;
BEGIN
  SELECT COUNT(1) INTO V_VALID FROM CENTROS_COSTOS WHERE IDE_CENTRO_COSTOS=V_CENTRO_COSTO;
  IF (V_VALID = 1)
  THEN
    SELECT COUNT(1) INTO V_VALID FROM FACTURAS WHERE NUM_FACTURA=V_NUM_FACT;
      IF (V_VALID = 1)
      THEN
        SELECT COUNT(FD.IDE_DETALLE) INTO V_CANTIDAD
        FROM FACTURAS_DETALLE FD
        INNER JOIN SERVICIOS SE ON SE.IDE_SERVICIO=FD.IDE_SERVICIO
        WHERE FD.NUM_FACTURA=V_NUM_FACT
        AND SE.IDE_CENTRO_COSTOS=V_CENTRO_COSTO
        ;
        RETURN V_CANTIDAD;
      ELSE
        RETURN 0;
      END IF;
  ELSE
      RETURN 0;
  END IF;
EXCEPTION 
WHEN NO_DATA_FOUND THEN
  RETURN 0;
END FUNCION2;
/
 
SELECT FUNCION2(110,1) FROM DUAL;

/*
5. Cree una vista para mostrar la información de las facturas patient, patient_name, patient_address, date,
date_admitted, discharge_date, total_items_room_board, balance_room_and_board,
total_items_laboratory, balance_laboratory, total_items_radiology, balance_radiology. Utilizar el
funciones creadas en el paso anterior*/

CREATE OR REPLACE VIEW FACTURA_FULL AS
SELECT  DISTINCT F.NUM_FACTURA, 
        P.NOMBRES||' '||P.APELLIDO1||' '||NVL(P.APELLIDO2,'') NOMBRE_PACIENTE,
        P.DIRECCION,
        F.FEC_FACTURA,
        AD.FEC_ADMISION,
        AD.FEC_ALTA,
        F.VLR_TOTAL_FAC,
        FUNCION2((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='ROOM _ BOARD'),F.NUM_FACTURA) total_items_room_board,
        FUNCION1((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='ROOM _ BOARD'),F.NUM_FACTURA) balance_room_and_board,
        FUNCION2((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='LABORATORY'),F.NUM_FACTURA) total_items_laboratory,
        FUNCION1((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='LABORATORY'),F.NUM_FACTURA) balance_laboratory,
        FUNCION2((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='RADIOLOGY'),F.NUM_FACTURA) total_items_radiology,
        FUNCION1((SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS CC WHERE CC.NOM_CENTRO_COSTOS='RADIOLOGY'),F.NUM_FACTURA) balance_radiology
FROM
        FACTURAS F, 
        FACTURAS_DETALLE FD,
        PACIENTES P, 
        ADMISIONES AD,
        SERVICIOS SE
WHERE F.NUM_FACTURA=FD.NUM_FACTURA
AND F.IDE_PACIENTE=P.IDE_PACIENTE
AND F.IDE_ADMISION=AD.IDE_ADMISION
AND FD.IDE_SERVICIO=SE.IDE_SERVICIO
ORDER BY F.NUM_FACTURA
;

/*6. Cree el plan de explicación para el último paso (agregue una captura de pantalla o copie y pegue la información devuelta)*/
EXPLAIN PLAN FOR
SELECT * FROM FACTURA_FULL;
SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY('PLAN_TABLE', NULL, 'BASIC'));

/*7. El propietario del producto ha solicitado un cambio, quiere manejar algún tipo de inventario para los artículos
que pertenece a cada centro de costo, la tabla donde almacena esos elementos debe tener una columna
"units_available" o "unidades_disponibles" (si hiciste el diagrama en español). (0.5)*/

ALTER TABLE SERVICIOS ADD unidades_disponibles NUMBER;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=54 WHERE IDE_SERVICIO=2005;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=150 WHERE IDE_SERVICIO=1585;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=150 WHERE IDE_SERVICIO=1580;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=50 WHERE IDE_SERVICIO=2000;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=68 WHERE IDE_SERVICIO=3010;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=50 WHERE IDE_SERVICIO=3020;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=468 WHERE IDE_SERVICIO=9010;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=19 WHERE IDE_SERVICIO=9020;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=8 WHERE IDE_SERVICIO=4005;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=4010;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=4020;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=4025;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=5010;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=5015;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=56 WHERE IDE_SERVICIO=6030;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=30 WHERE IDE_SERVICIO=6035;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=7070;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=10 WHERE IDE_SERVICIO=7075;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=450 WHERE IDE_SERVICIO=8090;
UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=200 WHERE IDE_SERVICIO=8095;


/*8. Cree un disparador que disminuya la cantidad de unidades disponibles cuando un artículo está asociado a una factura.*/
CREATE OR REPLACE TRIGGER ACTUALIZA_UNID_DISP
AFTER INSERT ON FACTURAS_DETALLE
FOR EACH ROW
BEGIN
  UPDATE SERVICIOS SET UNIDADES_DISPONIBLES=UNIDADES_DISPONIBLES-1 WHERE IDE_SERVICIO=:new.IDE_SERVICIO;
  COMMIT;
END;
/

/*9. Cree un procedimiento para aumentar el costo de cada artículo de la siguiente manera (0.5):
? Si el artículo pertenece al centro de costo de ROOM _ BOARD: 2%
? Si el artículo pertenece al LABORATORY: 3.5%
? Si el artículo pertenece a RADIOLOGY: 4%
*/

DECLARE
  PROCEDURE AUMENTAR_VALOR (  P_CENTRO_COSTOS   VARCHAR2,
                              P_PORCENTAJE NUMBER)
  IS
  BEGIN
    UPDATE SERVICIOS SET VLR_SERVICIO=VLR_SERVICIO*(1+(P_PORCENTAJE/100)) WHERE IDE_CENTRO_COSTOS=(SELECT IDE_CENTRO_COSTOS FROM CENTROS_COSTOS WHERE NOM_CENTRO_COSTOS=P_CENTRO_COSTOS);
    COMMIT;
  END;
BEGIN
  AUMENTAR_VALOR('ROOM _ BOARD',2);
  AUMENTAR_VALOR('LABORATORY',3.5);
  AUMENTAR_VALOR('RADIOLOGY',4);
END;
/
